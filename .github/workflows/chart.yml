name: Lint and Test Charts

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Lint Helm
        uses: WyriHaximus/github-action-helm3@v1.0.0
        with:
          exec: helm lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: azure/setup-helm@v1
      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - uses: engineerd/setup-kind@v0.4.0

      - run: |
          helm install mediaproxy . --wait \
            --set router.service.type=NodePort \
            --set server.resources.requests.cpu=512m \
            --set server.resources.requests.memory=512Mi \
            --set server.resources.limits.cpu=512m \
            --set server.resources.limits.memory=512Mi \

      - name: Get router port
        run: |
          echo ::set-env name=MEDIAPROXY_ENDPOINT::http://$(kubectl get node kind-control-plane -o yaml | yq r - status.addresses[0].address):$(kubectl get svc mediaproxy-mediaproxy-router -o yaml | yq r - spec.ports[0].nodePort )

      - name: Run tests
        run: |
          curl -i ${{ env.MEDIAPROXY_ENDPOINT }}
          bash test/test.sh ${{ env.MEDIAPROXY_ENDPOINT }}

      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: test/result

      - uses: jwalton/gh-find-current-pr@v1
        id: find_pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo ::set-env name=FALLBACK_PR::$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

      - run: |
          echo ::set-env name=PR_ID::${{ steps.find_pr.outputs.pr || env.FALLBACK_PR }}

      - name: Get report body
        run: |
          echo $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo ${{ steps.find_pr.outputs.pr }}
          echo ${{ env.PR_ID }}
          echo ::set-env name=REPORT::$(cat test/result/REPORT.md)

      - uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ env.PR_ID }}
          edit-mode: replace
          body: ${{ env.REPORT }}